apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion



    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        resourcePrefix "cb_"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders =[
                JPUSH_PKGNAME: "${applicationId}",
                JPUSH_APPKEY: "appkey",
                JPUSH_CHANNEL: "channel",
                QQ_ID: "qq_id"
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    testImplementation "junit:junit:${JUNIT_VERSION}"
    androidTestImplementation "com.android.support.test:runner:${TEST_RUNNER_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${TEST_ESPRESSO_CORE_VERSION}"

    // 微信分享，登录，支付等
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    // 微博分享
    compile "com.sina.weibo.sdk:core:${WEIBO_VERSION}:openDefaultRelease@aar"
    // 极光推送
    compile "cn.jiguang.sdk:jpush:${JPUSH_VERSION}"
    compile "cn.jiguang.sdk:jcore:${JCORE_VERSION}"
    // 华为推送
    compile "com.huawei.android.hms:push:${HMS_PUSH_VERSION}"
    compile project(path: ':baselibrary')
    // 图片操作库
    implementation 'com.github.JuHonggang:ImageSet:v0.12'
    // AspectJ
    compile 'org.aspectj:aspectjrt:1.8.9'
}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.libraryVariants
variants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break
            }
        }
    }
}
